import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.util.Scanner;

public class SimpleDES {
    public static void main(String[] args) {
        try {
            // Generate DES key
            KeyGenerator keyGen = KeyGenerator.getInstance("DES");
            keyGen.init(56);
            SecretKey secretKey = keyGen.generateKey();
            byte[] rawKey = secretKey.getEncoded();

            // Read input from user
            Scanner sc = new Scanner(System.in);
            System.out.print("Enter message to encrypt: ");
            String message = sc.nextLine();

            // Encrypt message
            Cipher cipher = Cipher.getInstance("DES");
            SecretKeySpec keySpec = new SecretKeySpec(rawKey, "DES");
            cipher.init(Cipher.ENCRYPT_MODE, keySpec);
            byte[] encrypted = cipher.doFinal(message.getBytes());
            String encryptedText = Base64.getEncoder().encodeToString(encrypted);

            // Decrypt message
            cipher.init(Cipher.DECRYPT_MODE, keySpec);
            byte[] decrypted = cipher.doFinal(Base64.getDecoder().decode(encryptedText));
            String decryptedText = new String(decrypted);

            // Display results
            System.out.println("DES Symmetric Key: " + Base64.getEncoder().encodeToString(rawKey));
            System.out.println("Encrypted Message: " + encryptedText);
            System.out.println("Decrypted Message: " + decryptedText);

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }
    }
}
