

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <ctype.h>

int main() {
    char plaintext[1024];
    char key[1024];
    char cipher[1024];
    char decrypted[1024];
    size_t n, i;

    printf("Enter plaintext: ");
    if (!fgets(plaintext, sizeof(plaintext), stdin)) return 0;
    n = strlen(plaintext);
    if (n > 0 && plaintext[n-1] == '\n') { plaintext[--n] = '\0'; }

    srand((unsigned) time(NULL) ^ (unsigned) clock());

    for (i = 0; i < n; ++i) {
        char p = plaintext[i];
        if (isalpha((unsigned char)p)) {
            int r = rand() % 26;                 /* random shift 0-25 */
            key[i] = 'A' + r;                   /* display key as uppercase letter */
            if (isupper((unsigned char)p)) {
                cipher[i] = (char)('A' + (p - 'A' + r) % 26);
            } else {
                cipher[i] = (char)('a' + (p - 'a' + r) % 26);
            }
        } else {
            key[i] = '-';       /* placeholder for non-letter positions */
            cipher[i] = p;      /* non-letters unchanged */
        }
    }
    key[n] = cipher[n] = '\0';

    /* Decrypt using the generated key */
    for (i = 0; i < n; ++i) {
        char k = key[i];
        char c = cipher[i];
        if (k != '-' && isalpha((unsigned char)c)) {
            int r = k - 'A';
            if (isupper((unsigned char)c)) {
                decrypted[i] = (char)('A' + (c - 'A' - r + 26) % 26);
            } else {
                decrypted[i] = (char)('a' + (c - 'a' - r + 26) % 26);
            }
        } else {
            decrypted[i] = c;
        }
    }
    decrypted[n] = '\0';

    printf("\nKey:        %s\n", key);
    printf("Ciphertext: %s\n", cipher);
    printf("Decrypted:  %s\n", decrypted);

    return 0;
}
